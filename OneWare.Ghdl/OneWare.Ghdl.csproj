<Project Sdk="Microsoft.NET.Sdk">
    
    <PropertyGroup>
        <TargetFramework>net7.0</TargetFramework>
        <ImplicitUsings>enable</ImplicitUsings>
        <Nullable>enable</Nullable>
        <EnableDynamicLoading>true</EnableDynamicLoading>
        <AvaloniaUseCompiledBindingsByDefault>true</AvaloniaUseCompiledBindingsByDefault>
        <SelfContained>false</SelfContained>
    </PropertyGroup>
    
    <ItemGroup>
        <PackageReference Include="MsBuildUncompressTask" Version="1.0.5"/>
        <PackageReference Include="OneWare.Shared" Version="0.12.0.2" Private="false" ExcludeAssets="runtime"/>
    </ItemGroup>
    
    <PropertyGroup Condition="'$(RuntimeIdentifier)' == 'win-x64' OR ('$(RuntimeIdentifier)' == '' AND $([MSBuild]::IsOSPlatform('Windows')))">
        <UsePackageTarget>win-x64</UsePackageTarget>
        <ExternalPackageUrl>https://github.com/ghdl/ghdl/releases/download/v3.0.0/ghdl-MINGW32.zip</ExternalPackageUrl>
    </PropertyGroup>

    <PropertyGroup Condition="'$(RuntimeIdentifier)' == 'linux-x64' OR ('$(RuntimeIdentifier)' == '' AND $([MSBuild]::IsOSPlatform('Linux')))">
        <UsePackageTarget>linux-x64</UsePackageTarget>
        <ExternalPackageUrl>https://github.com/ghdl/ghdl/releases/download/v3.0.0/ghdl-gha-ubuntu-20.04-mcode.tgz</ExternalPackageUrl>
    </PropertyGroup>

    <PropertyGroup Condition="'$(RuntimeIdentifier)' == 'osx-x64' OR ('$(RuntimeIdentifier)' == '' AND $([MSBuild]::IsOSPlatform('OSX')))">
        <UsePackageTarget>osx-x64</UsePackageTarget>
        <ExternalPackageUrl>https://github.com/ghdl/ghdl/releases/download/v3.0.0/ghdl-macos-11-mcode.tgz</ExternalPackageUrl>
    </PropertyGroup>

    <PropertyGroup>
        <PackageName>ghdl</PackageName>
        <ExtractionFolder>native_tools/$(UsePackageTarget)/$(PackageName)</ExtractionFolder>
    </PropertyGroup>

    <ItemGroup>
        <Content Include="$(ExtractionFolder)/**" CopyToOutputDirectory="PreserveNewest"/>
    </ItemGroup>

    <Target Name="DownloadExternalPackage" BeforeTargets="BeforeBuild" Condition="'$(ExternalPackageUrl)' != '' AND !Exists('$(ExtractionFolder)')">
        <DownloadFile
                SourceUrl="$(ExternalPackageUrl)"
                DestinationFileName="temp_package.tmp"
                DestinationFolder="$(IntermediateOutputPath)"/>
        <Uncompress TargetDirectory="$(ExtractionFolder)"
                    ArchivePath="$(IntermediateOutputPath)temp_package.tmp"/>
        <Message Text="Downloaded Package from $(ExternalPackageUrl)" Importance="high"/>
        <ItemGroup>
            <Content Include="$(ExtractionFolder)/**" CopyToOutputDirectory="PreserveNewest"/>
        </ItemGroup>
    </Target>
    
</Project>
